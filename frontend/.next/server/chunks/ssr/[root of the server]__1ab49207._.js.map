{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/xampp/htdocs/Raskilha/frontend/app/signup/page.jsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Image from 'next/image'; // Use next/image for optimized image loading\r\nimport Link from 'next/link';\r\nimport { IoIosLogIn } from 'react-icons/io';\r\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md';\r\nimport { useRouter } from 'next/navigation'; // Use Next.js router for navigation\r\nimport toast from 'react-hot-toast';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const router = useRouter(); // Next.js router\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  const changeVisible = () => {\r\n    setPasswordVisible((prev) => !prev);\r\n  };\r\n\r\n  // Redirect to Schedule if user is already logged in (optional)\r\n  useEffect(() => {\r\n    // You can check if the user is already logged in here using localStorage\r\n    const user = localStorage.getItem('userDetails');\r\n    if (user) {\r\n      router.push('/Schedule');\r\n    }\r\n  }, [router]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('/api/login', {  // Using Next.js API route for login\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        localStorage.setItem('userDetails', JSON.stringify(data.data)); // Store user details in localStorage\r\n        router.push('/menu');\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (error) {\r\n      setError('Error during login: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const showError = () => {\r\n    toast.error(error, {\r\n      position: 'top-center',\r\n      autoClose: 1000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      showError();\r\n      setError(null);\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center justify-center bg-gradient-to-r from-gray-50 to-green-100\">\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-5/6 max-w-full space-y-6 h-5/6 flex items-center justify-around\">\r\n         <Image src=\"/Images/Waste management-pana (1).png\" width={600} height={500} alt=\"Team Illustration\" unoptimized priority  />\r\n        <div className='flex flex-col justify-around h-full w-96'>\r\n                <div >\r\n                    <h2 className=\"text-3xl font-bold text-center  text-gray-800 \">Get Started Now </h2>\r\n                    <h2 className=\"text-base font-thin text-center text-gray-800\">Welcome to TaskFlow-Let's create your account.</h2>\r\n                </div>\r\n                <form  className=\"flex flex-col justify-around gap-4 \">\r\n                <div className='flex flex-col gap-2'>\r\n                    <label htmlFor=\"username\" className=\"block text-gray-700\">Username :</label>\r\n                    <input \r\n                    type=\"text\" \r\n                    placeholder='Enter your username'\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-400\" \r\n                    required \r\n                    />\r\n                </div>\r\n                <div className='flex flex-col gap-2'>\r\n                    <label htmlFor=\"username\" className=\"block text-gray-700\">Email :</label>\r\n                    <input \r\n                    type=\"email\" \r\n                    placeholder=\"Enter your email\" \r\n                    name=\"email\" \r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-400\" \r\n                    required \r\n                    />\r\n                </div>\r\n                \r\n                    <div className='flex flex-col gap-2'>\r\n                                        <label htmlFor=\"password\" className=\"block text-gray-700\">Password :</label>\r\n                                        \r\n                                        <div className=\"relative w-full\">\r\n                                                <input \r\n                                                type={passwordVisible ? \"text\" : \"password\"}\r\n                                                placeholder='Enter your password'\r\n                                                value={password}\r\n                                                onChange={(e) => setPassword(e.target.value)}\r\n                                                className=\"w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-400\" \r\n                                                required \r\n                                                />\r\n                                                    <button\r\n                                                      type=\"button\"\r\n                                                      onClick={changeVisible}\r\n                                                      className=\"absolute inset-y-0 right-3 flex items-center text-gray-500 hover:text-gray-700\"\r\n                                                    >\r\n                                                      {passwordVisible ? (\r\n                                                        <MdVisibility className='w-5 h-5'/>\r\n                                                      ) : (\r\n                                                        <MdVisibilityOff className='w-5 h-5'/>\r\n                                                      )}\r\n                                                    </button>\r\n                                          </div>\r\n                        \r\n                </div>\r\n\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"w-full py-3 bg-zinc-800 text-white font-semibold flex items-center justify-center gap-2\r\n                    rounded-md hover:bg-zinc-900 focus:outline-none focus:ring-2 focus:ring-slate-400\"\r\n                >\r\n                  <i><IoIosLogIn className='h-8 w-6'></IoIosLogIn></i>\r\n                    Sign up\r\n                </button>\r\n                </form>\r\n\r\n                <p className=\"text-center text-sm text-gray-600\">Already have an account? <Link href={\"/login\"} className=\"text-gray-500 hover:underline hover:text-gray-700\">Login</Link></p>\r\n                </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}